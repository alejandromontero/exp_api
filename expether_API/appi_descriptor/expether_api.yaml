swagger: "2.0"
info: 
    title: "Rest API for expether"
    description: "A REST API that comunicates with the eem python"
    version: "0.1"

consumes:
    - application/json
produces:
    - application/json

basePath: /api

paths:
    /assignment:
        get:
            operationId: api.assignments.get_all_assignments
            tags: [ 
                "assignments"
                ]
            description: Read the entire list of assignments
            responses:
                '200':
                    description: 'List of assignments'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Assignament'

        post:
            operationId: api.assignments.create_assignment
            tags: [
                "assignments"
                ]
            description: Make an assignment 
            consumes:
                - application/json
            parameters:
                - in: body 
                  name: workload
                  description: Assignament to perform
                  schema:
                    type: object
                    properties:
                        workloadID:
                            type: number

                    
            responses:
                '200':
                    description: 'Assignament succesful'
                '304':
                    description: 'Assignament unssuccesful'

        delete:
            operationId: api.assignments.erase_assignment
            tags: [
                "assignments"
                ]
            description: Eliminate assignment
            consumes:
                - application/json
            parameters:
                - in: body
                  name: workload
                  description: Workload whose assignment to eliminate
                  schema:
                      type: object
                      properties:
                          workloadID:
                              type: number
            responses:
                '200':
                    description: 'Assignament eliminated'
                '404':
                    description: 'Assignament not found'

    /workload:
        get:
            operationId: api.workloads.get_all_workloads
            tags: [ 
                "workloads"
                ]
            description: Retrieve the list of active workloads
            responses:
                '200':
                    description: 'List of workloads'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Workload'

        post:
            operationId: api.workloads.create_workload
            tags: [
                "workloads"
                ]
            description: Create a new workload 
            consumes:
                - application/json
            parameters:
                - in: body 
                  name: workload
                  description: 'Assignament to perform'
                  schema:
                    $ref: '#/definitions/Workload'

            responses:
                '200':
                    description: 'Workload created succesful'
                '304':
                    description: 'Workload could not be created'

    /workload/{id}:
        get:
            operationId: api.workloads.get_workload
            tags: [
                "workloads"
                ]
            description: Retrieve workload information
            parameters:
                - in: path
                  name: id
                  required: true
                  type: string
                  description: ID of the assignment to query
            responses:
                '200':
                    description: 'Assignament found'
                    schema:
                        type: object
                        $ref: '#/definitions/Workload'
                '400':
                    description: 'Assignament not found'

        delete:
            operationId: api.workloads.erase_workload
            tags: [
                "workloads"
                ]
            description: Eliminate workload
            parameters:
                - in: path
                  name: id
                  required: true
                  type: string
                  description: ID of the assignment to query
            responses:
                '200':
                    description: 'Assignament eliminated'
                '404':
                    description: 'Assignament not found'

    /card:
        get:
            operationId: api.cards.get_all_cards
            tags: [ 
                "EEM cards"
                ]
            description: Read the entire list of avaiable cards
            responses:
                '200':
                    description: 'List of cards'
                    schema:
                        type: array
                        items:
                            type: string 
    
    /card_hardware:
        get: 
            operationId: api.cards.get_all_hardware_cards
            tags: [
                "EMM cards tags"
                ]
            description: Get a list with the info of all tagged hardware cards 
            responses:
                '200':
                    description: 'Box tag created succesfully'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/HardwareTag'

        post:
            operationId: api.cards.create_hardware_tag
            tags: [
                "EMM cards tags"
                ]
            description: Tag a card with a type of hardware 
            consumes:
                - application/json
            parameters:
                - in: body 
                  name: card
                  description: Assignament to perform
                  schema:
                    $ref: "#/definitions/HardwareTag"

            responses:
                '200':
                    description: 'Box tag created succesfully'
                '304':
                    description: 'Box tag could not be created'

        put:
            operationId: api.cards.modify_hardware_tag
            tags: [
                "EMM cards tags"
                ]
            description: Modify a hardware tag for an entry already present on the DB
            consumes:
                - application/json
            parameters:
                - in: body 
                  name: card
                  description: Assignament to perform
                  schema:
                    $ref: "#/definitions/HardwareTag"

            responses:
                '200':
                    description: 'Box tag created succesfully'
                '304':
                    description: 'Box tag could not be modified'

    
    /card_net:
        get: 
            operationId: api.cards.get_all_network_cards
            tags: [
                "EMM cards tags"
                ]
            description: Get a list with the info of all tagged network cards 
            responses:
                '200':
                    description: 'Box tag created succesfully'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/NetTag'

        post:
            operationId: api.cards.create_net_tag
            tags: [
                "EMM cards tags"
                ]
            description: Tag a network card with a gid and server 
            consumes:
                - application/json
            parameters:
                - in: body 
                  name: card
                  description: Assignament to perform
                  schema:
                    $ref: "#/definitions/NetTag"

            responses:
                '200':
                    description: 'Box tag created succesfully'
                '304':
                    description: 'Box tag could not be created'

        put:
            operationId: api.cards.modify_net_tag
            tags: [
                "EMM cards tags"
                ]
            description: Modify a network card tag for an entry already present on the DB
            consumes:
                - application/json
            parameters:
                - in: body 
                  name: card
                  description: Assignament to perform
                  schema:
                    $ref: "#/definitions/NetTag"

            responses:
                '200':
                    description: 'Box tag created succesfully'
                '304':
                    description: 'Box tag could not be created'

    /card/{id}:
        get:
            operationId: api.cards.get_card
            tags: [
                "EEM cards"
                ]
            description: Retrieve all available info abou the card
            parameters:
                - in: path
                  name: id
                  required: true
                  type: string
                  description: ID of the card to query
            responses:
                '200':
                    description: 'Box found'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/BoxInfo'
                '400':
                    description: 'Box not found'

        delete:
            operationId: api.cards.erase_card
            tags: [
                "EMM cards tags"
                ]
            description: Eliminate card
            parameters:
                - in: path
                  name: id
                  required: true
                  type: string
                  description: ID of the card tag to eliminate
            responses:
                '200':
                    description: 'Tag eliminated'
                '404':
                    description: 'Tag not found'

    /global_state:
        get:
            operationId: api.global.get_state
            tags: [
                "EEM global state"
                ]
            description: Retrieve an HTML file with the EEM global state
            responses:
                '200':
                    description: 'HTML generated'


definitions:
    Assignament:
        type: object
        properties:
            workloadId:
                type: number
            cardID:
                type: string

    Workload:
        type: object
        properties:
            name:
                type: string
            user:
                type: string
            description:
                type: string
            assigned_to:
                type: string
            requirements:
                type: array
                items:
                    $ref: '#/definitions/Requirement'

    Requirement:
        type: object
        properties:
            hardware_type:
                type: string
            model:
                type: string
            hardware_capacity_requirements:
                type: array
                items:
                    $ref: '#/definitions/Capacity'


    Server:
        type: object
        properties:
            name:
                type: string
            number:
                type: number

    HardwareTag:
        type: object
        properties:
            id:
                type: string
            hardware:
                type: string
            model:
                type: string
            pcie_vendor_id:
                type: string
            pcie_device_id:
                type: string
            capacity:
                type: array
                items:
                    $ref: '#/definitions/Capacity'

    Capacity:
        type: object
        properties:
            requirement_name:
                type: string
            unit:
                type: string
            value:
                type: number

    NetTag:
        type: object
        properties:
            id:
                type: string 
            assigned_to: 
                type: string
            gid:
                type: number

    BoxInfo:
        type: object
        required:
            - id
        properties:
            id:
                type: string
            status:
                type: string
            update_time:
                type: number
            admin_status:
                type: string
            monitoring_status:
                type: string
            notification_status0:
                type: integer 
            notification_status1:
                type: integer
            mac_address:
                type: string
            group_id:
                type: number
            vlan_tagging:
                type: string
            multi_mac_addresses:
                type: string
            encryption:
                type: integer
            uid_switch_status:
                type: string
            power_status:
                type: string
            pcie_link_width:
                type: string
            interrupt_vector:
                type: string
            ee_version:
                type: string
            device_id:
                type: string
            revision:
                type: string
            fpga_version:
                type: string
            eeprom_data_version:
                type: string
            serial_number:
                type: number
            model:
                type: string
            link_status0:
                type: string
            link_status1:
                type: string
            path_status0:
                type: string
            path_status1:
                type: string
            eesv_connection_status:
                type: string
            eesv_mac_address:
                type: string
            pcie_connection_status:
                type: string
            pcie_vendor_id:
                type: string
            pcie_device_id:
                type: string
            pcie_class_code:
                type: string
